version: '3.4'

services:
  api:
    deploy:
      replicas: 0
    build:
      context: .
      dockerfile: src/api/src/ApplicationRegistry.Web/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "https://+:443;http://+:80"
      ConnectionStrings__ApplicationRegistry: "Server=db;Database=master;User=sa;Password=Your_password123;"
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    # depends_on:
    #   db:
    #     condition: service_healthy
  ui:
    deploy:
      replicas: 0
    build:
      context: src/ui
      dockerfile: Dockerfile
      # target: develop
    # volumes:
    #   - ./src/ui:/app
  gateway:
    deploy:
      replicas: 0
    build:
      context: src/gateway
      dockerfile: Dockerfile 
  dev-gateway:
    image: ${DOCKER_REGISTRY-}applicationregistry-gateway:dev-${APPLICATIONREGISTRY_VERSION:-latest}
    build:
      context: src/gateway
      dockerfile: Dockerfile
      args:
        "CONFIGFILE": "envoy.dev.yaml" 
    # network_mode: "host"
    ports: 
    - "10000:10000"
    - "9903:9903"
  # db:
  #   deploy:
  #     replicas: 0
    # image: "mcr.microsoft.com/mssql/server"
    # environment:
    #   SA_PASSWORD: "Your_password123"
    #   ACCEPT_EULA: "Y"
    # ports:
    #   - "11433:1433"
    # volumes:
    #   - sql-volume:/var/opt/mssql
    # networks:
    #   - application-registry
    # healthcheck:
    #   test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" || exit 1
    #   interval: 10s
    #   timeout: 3s
    #   retries: 10
    #   start_period: 10s

volumes:
  sql-volume: